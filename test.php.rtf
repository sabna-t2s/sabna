Microsoft Windows [Version 6.1.7600]
Copyright (c) 2009 Microsoft Corporation.  All rights reserved.

C:\Users\touch2s>cd..

C:\Users>cd..

C:\>git status
fatal: Not a git repository (or any of the parent directories): .git

C:\>cd Users

C:\Users>git status
fatal: Not a git repository (or any of the parent directories): .git

C:\Users>cd ..

C:\>git status
fatal: Not a git repository (or any of the parent directories): .git

C:\>git clone https://github.com/sabna-t2s/test.git
Cloning into 'test'...
remote: Counting objects: 6, done.
remote: Compressing objects: 100% (3/3), done.
remote: Total 6 (delta 0), reused 0 (delta 0), pack-reused 0
Unpacking objects: 100% (6/6), done.
Checking connectivity... done.

C:\> git status
fatal: Not a git repository (or any of the parent directories): .git

C:\>cd test

C:\test>git status
On branch master
Your branch is up-to-date with 'origin/master'.
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   README.md

no changes added to commit (use "git add" and/or "git commit -a")

C:\test> git checkout -b hotfix/testfile added for testing
fatal: Cannot update paths and switch to branch 'hotfix/testfile' at the same ti
me.

C:\test>git commit -a -m "test file added"

*** Please tell me who you are.

Run

  git config --global user.email "you@example.com"
  git config --global user.name "Your Name"

to set your account's default identity.
Omit --global to set the identity only in this repository.

fatal: unable to auto-detect email address (got 'touch2s@admin-sg.(none)')

C:\test>git config --global user.email "sabna@touch2success.com"

C:\test>git config --global user.name "sabna-t2s"

C:\test>git commit -a -m "test file added"
[master e58d2f5] test file added
 1 file changed, 4 insertions(+)

C:\test>git push
warning: push.default is unset; its implicit value has changed in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the traditional behavior, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

Since Git 2.0, Git defaults to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

Username for 'https://github.com': sabna-t2s
Password for 'https://sabna-t2s@github.com':
Counting objects: 3, done.
Writing objects: 100% (3/3), 277 bytes | 0 bytes/s, done.
Total 3 (delta 0), reused 0 (delta 0)
To https://github.com/sabna-t2s/test.git
   837d8d1..e58d2f5  master -> master

C:\test>git status
On branch master
Your branch is up-to-date with 'origin/master'.
nothing to commit, working directory clean

C:\test>git checkout -b hotfix/test
Switched to a new branch 'hotfix/test'

C:\test>git pull
There is no tracking information for the current branch.
Please specify which branch you want to merge with.
See git-pull(1) for details.

    git pull <remote> <branch>

If you wish to set tracking information for this branch you can do so with:

    git branch --set-upstream-to=origin/<branch> hotfix/test


C:\test>git commit -a -m "second message"
On branch hotfix/test
nothing to commit, working directory clean

C:\test>git status
On branch hotfix/test
Untracked files:
  (use "git add <file>..." to include in what will be committed)

        test2.php.rtf

nothing added to commit but untracked files present (use "git add" to track)

C:\test>git commit -a -m "test 2"
On branch hotfix/test
Untracked files:
        test2.php.rtf

nothing added to commit but untracked files present

C:\test>git add test2.php.rtf

C:\test>git commit -a -m "test 2"
[hotfix/test 3af3586] test 2
 1 file changed, 2 insertions(+)
 create mode 100644 test2.php.rtf

C:\test>git push
warning: push.default is unset; its implicit value has changed in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the traditional behavior, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

Since Git 2.0, Git defaults to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

fatal: The current branch hotfix/test has no upstream branch.
To push the current branch and set the remote as upstream, use

    git push --set-upstream origin hotfix/test


C:\test>git status
On branch hotfix/test
nothing to commit, working directory clean

C:\test>git commit -a -m "test2"
On branch hotfix/test
nothing to commit, working directory clean

C:\test>git pull
There is no tracking information for the current branch.
Please specify which branch you want to merge with.
See git-pull(1) for details.

    git pull <remote> <branch>

If you wish to set tracking information for this branch you can do so with:

    git branch --set-upstream-to=origin/<branch> hotfix/test


C:\test>git push origin test
error: src refspec test does not match any.
error: failed to push some refs to 'https://github.com/sabna-t2s/test.git'

C:\test>git push
warning: push.default is unset; its implicit value has changed in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the traditional behavior, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

Since Git 2.0, Git defaults to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

fatal: The current branch hotfix/test has no upstream branch.
To push the current branch and set the remote as upstream, use

    git push --set-upstream origin hotfix/test


C:\test>history
'history' is not recognized as an internal or external command,
operable program or batch file.

C:\test>git history
git: 'history' is not a git command. See 'git --help'.

C:\test>git --help
usage: git [--version] [--help] [-C <path>] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone      Clone a repository into a new directory
   init       Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add        Add file contents to the index
   mv         Move or rename a file, a directory, or a symlink
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect     Use binary search to find the commit that introduced a bug
   grep       Print lines matching a pattern
   log        Show commit logs
   show       Show various types of objects
   status     Show the working tree status

grow, mark and tweak your common history
   branch     List, create, or delete branches
   checkout   Switch branches or restore working tree files
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   merge      Join two or more development histories together
   rebase     Forward-port local commits to the updated upstream head
   tag        Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch      Download objects and refs from another repository
   pull       Fetch from and integrate with another repository or a local branch

   push       Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.

C:\test>{\rtf1}